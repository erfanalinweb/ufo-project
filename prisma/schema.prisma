
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FormData {
  id        Int      @id @default(autoincrement())
  
  name              String
  fatherName        String   @map("father_name")
  motherName        String   @map("mother_name")
  nid               String
  dob               String
  phoneNumber       String   @map("phone_number")
  
  village           String
  unionName         String   @map("union_name")
  upazila           String
  district          String
  
  familyMembers     Int      @map("family_members")
  incomeSource      String   @map("income_source")
  monthlyIncome     String   @map("monthly_income")
  landAmount        String   @map("land_amount")
  
  houseType         String   @map("house_type")
  toiletType        String   @map("toilet_type")
  drinkingWaterSource Json   @map("drinking_water_source")
  
  childrenCount     String   @map("children_count")
  maleChildrenCount String   @map("male_children_count")
  femaleChildrenCount String @map("female_children_count")
  
  donationItems     String   @map("donation_items")
  
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  transactions      Transaction[]
  
  @@map("form_data")
}

model Transaction {
  id                Int      @id @default(autoincrement())
  
  formId            Int      @map("form_id")
  formData          FormData @relation(fields: [formId], references: [id], onDelete: Cascade)
  
  amount            Decimal  @default(20.00) @db.Decimal(10, 2)
  currency          String   @default("BDT")
  
  bkashPaymentId    String?  @map("bkash_payment_id")
  bkashTrxId        String?  @map("bkash_trx_id")
  bkashNumber       String?  @map("bkash_number")
  merchantInvoiceNumber String? @map("merchant_invoice_number")
  
  status            TransactionStatus @default(PENDING)
  statusMessage     String?  @map("status_message")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  completedAt       DateTime? @map("completed_at")
  
  @@map("transactions")
}

enum TransactionStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
  REFUNDED
}